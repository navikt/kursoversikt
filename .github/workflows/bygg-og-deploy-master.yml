name: Bygg og deploy master

on:
  push:
    branches:
      - 'master'

env:
  IMAGE: ghcr.io/${{ github.repository }}/${{ github.event.repository.name }}:${{ github.sha }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Sjekk ut kode
        uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 17
          cache: 'npm'
      - run: npm install
      - run: npm run build


  bygg:
    name: Bygg
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
    steps:
      - name: Lukk deployment-issues
        uses: actions/github-script@0.5.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: ['deploy']
            }).then(response => {
              response.data.forEach(issue => {
                github.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  state: 'closed'
                });
              });
            });
      - name: Sjekk ut kode
        uses: actions/checkout@v2

      - uses: actions/setup-node@v3
        with:
          node-version: 17
          cache: 'npm'

      - run: npm ci
      - run: npm run build
      
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -  uses: docker/build-push-action@v2
         with:
            context: .
            push: true
            tags: |
              ${{ env.IMAGE }}
              ${{ env.IMAGE_BASE }}:latest
            cache-from: type=registry,ref=${{ env.IMAGE_BASE }}:latest
            cache-to: type=inline
          
      - name: Lag sentry release
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        continue-on-error: true
        run: |
          export SENTRY_LOG_LEVEL=info
          echo '[sentry-cli releases new]'
          npx -p @sentry/cli sentry-cli releases new "${{ github.sha }}"
          echo '[sentry-cli releases files]'
          npx -p @sentry/cli sentry-cli releases files "${{ github.sha }}" upload-sourcemaps build/static/js \
              --url-prefix '~/kursoversikt/static/js'
          echo '[sentry-cli releases finalize]'
          npx -p @sentry/cli sentry-cli releases finalize "${{ github.sha }}"

  deploy-dev-gcp:
    name: Deploy til dev-gcp
    runs-on: ubuntu-latest
    timeout-minutes: 3
    if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
    needs: bygg
    steps:
      - name: Sjekk ut kode
        uses: actions/checkout@v2

      - name: Deploy til dev-gcp
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: naiserator-gcp.yaml
          PRINT_PAYLOAD: true
          VARS: nais/dev-gcp.json
          VAR: commit=${{ env.GITHUB_SHA }}

  deploy-prod-gcp:
    name: Deploy til prod-gcp
    runs-on: ubuntu-latest
    needs: bygg
    steps:
      - name: Sjekk ut kode
        uses: actions/checkout@v2
      - name: Deploy til prod-gcp
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: naiserator-gcp.yaml
          PRINT_PAYLOAD: true
          VARS: nais/prod-gcp.json
          VAR: commit=${{ env.GITHUB_SHA }}
